<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zty.springboot01login.Mapper.CourseLabMapper" >
  <resultMap id="BaseResultMap" type="com.zty.springboot01login.Pojo.CourseLab" >
    
    <!-- 课程id，主键 -->
    <id column="lab_id" property="labId" jdbcType="VARCHAR" />
    
    <!-- 关联课程的id -->
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    
    <!-- 关联课程的名称 -->
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    
    <!-- 实验名称 -->
    <result column="lab_name" property="labName" jdbcType="VARCHAR" />
    
    <!-- 关联环境id -->
    <result column="env_id" property="envId" jdbcType="VARCHAR" />
    
    <!-- 实验文档路径 -->
    <result column="doc_path" property="docPath" jdbcType="VARCHAR" />
    
    <!-- 实验描述 -->
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    
    <!-- 第几次实验 -->
    <result column="section_id" property="sectionId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    lab_id, course_id, course_name, lab_name, env_id, doc_path, remarks, section_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zty.springboot01login.Pojo.CourseLabExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_course_lab
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_course_lab
    where lab_id = #{labId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_course_lab
    where lab_id = #{labId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zty.springboot01login.Pojo.CourseLabExample" >
    delete from tb_course_lab
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" >
    insert into tb_course_lab (lab_id, course_id, course_name, 
      lab_name, env_id, doc_path, 
      remarks, section_id)
    values (#{labId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{labName,jdbcType=VARCHAR}, #{envId,jdbcType=VARCHAR}, #{docPath,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{sectionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" >
    insert into tb_course_lab
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="labId != null" >
        lab_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="labName != null" >
        lab_name,
      </if>
      <if test="envId != null" >
        env_id,
      </if>
      <if test="docPath != null" >
        doc_path,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="sectionId != null" >
        section_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="labId != null" >
        #{labId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="labName != null" >
        #{labName,jdbcType=VARCHAR},
      </if>
      <if test="envId != null" >
        #{envId,jdbcType=VARCHAR},
      </if>
      <if test="docPath != null" >
        #{docPath,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null" >
        #{sectionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zty.springboot01login.Pojo.CourseLabExample" resultType="java.lang.Integer" >
    select count(*) from tb_course_lab
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_course_lab
    <set >
      <if test="record.labId != null" >
        lab_id = #{record.labId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.labName != null" >
        lab_name = #{record.labName,jdbcType=VARCHAR},
      </if>
      <if test="record.envId != null" >
        env_id = #{record.envId,jdbcType=VARCHAR},
      </if>
      <if test="record.docPath != null" >
        doc_path = #{record.docPath,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionId != null" >
        section_id = #{record.sectionId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_course_lab
    set lab_id = #{record.labId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      lab_name = #{record.labName,jdbcType=VARCHAR},
      env_id = #{record.envId,jdbcType=VARCHAR},
      doc_path = #{record.docPath,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      section_id = #{record.sectionId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update tb_course_lab
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="labName != null" >
        lab_name = #{labName,jdbcType=VARCHAR},
      </if>
      <if test="envId != null" >
        env_id = #{envId,jdbcType=VARCHAR},
      </if>
      <if test="docPath != null" >
        doc_path = #{docPath,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null" >
        section_id = #{sectionId,jdbcType=INTEGER},
      </if>
    </set>
    where lab_id = #{labId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" >
    update tb_course_lab
    set course_id = #{courseId,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      lab_name = #{labName,jdbcType=VARCHAR},
      env_id = #{envId,jdbcType=VARCHAR},
      doc_path = #{docPath,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      section_id = #{sectionId,jdbcType=INTEGER}
    where lab_id = #{labId,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.zty.springboot01login.Pojo.CourseLabExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_course_lab
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-12-17 18:01:31 ### -->



  <!-- Your codes goes here!!! -->
  
</mapper>